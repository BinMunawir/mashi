version: '3.8'

services:
  backend:
    image: mashi
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    env_file: [ dev.env ]
    ports: [ "18080:${PORT}" ]
    # restart: on-failure
    depends_on:
      - db
    volumes:
    - .:/mashi
    command: make compose_run

  db:
    image: postgres:15.0-bullseye
    restart: always
    environment:
      - POSTGRES_USER=mashi
      - POSTGRES_PASSWORD=123456789
      - POSTGRES_DB=mashi
    ports: [5432:5432]
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports: [18081:8080]
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports: [2181:2181]
    volumes:
      - zookeeperdata:/var/lib/zookeeper/data
      - zookeeperlog:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka
    depends_on: [zookeeper]
    ports:
      - 29092:9092
    volumes:
      - kafkadata:/var/lib/kafka/data
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 18082:8080
    depends_on:
      - kafka
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092



volumes:
  pgdata:
    driver: local
  kafkadata:
    driver: local
  zookeeperdata:
    driver: local
  zookeeperlog:
    driver: local
